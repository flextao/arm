
RAILS_ENV = ENV['RAILS_ENV'] || 'development'
RAILS_ROOT = File.dirname(__FILE__) unless defined?(RAILS_ROOT)
ARM_ROOT = RAILS_ROOT
GEMS_ROOT = File.join(ARM_ROOT, 'vendor', 'gems')

if File.exist?(File.join(GEMS_ROOT, 'activerecord'))

  Dir.entries(GEMS_ROOT).select { |p|
    p.match(/^[^\.]/) and File.directory?(File.join(GEMS_ROOT, p, "lib"))
  }.each { |p|
    $:.unshift(File.join(GEMS_ROOT, p, "lib"))
  }

  require 'initializer'
  require 'activerecord'

  # only support activerecord 2.3.2 for dumpping string type id for table now
  if ActiveRecord::VERSION::STRING == '2.3.2'
    $:.unshift File.join(ARM_ROOT, 'vendor', 'ext', 'activerecord-2.3.2', 'lib')
  end

  arm_log_dir = File.exists?('logs') ? "logs" : (File.exists?('log') ? 'log' : '')
  ActiveRecord::Base.logger = Logger.new(File.join(ARM_ROOT, arm_log_dir, 'arm.log'))
  ActiveRecord::Base.logger.level = Logger::DEBUG
  ActiveRecord::Base.configurations = Rails::Configuration.new.database_configuration
  ActiveRecord::Base.establish_connection(ActiveRecord::Base.configurations[RAILS_ENV])

  # load rails tasks we need
  RAILS_GEM_DIR = Dir.entries(GEMS_ROOT).detect {|path| path =~ /rails/}
  load File.join(GEMS_ROOT, RAILS_GEM_DIR, 'lib', 'tasks', 'misc.rake')
  load File.join(GEMS_ROOT, RAILS_GEM_DIR, 'lib', 'tasks', 'databases.rake')

  # fix activerecord-jdbc-adapter 0.9.1 postgre adapter drop database problem
  if ActiveRecord::Base.configurations[RAILS_ENV]['driver'] =~ /postgres/
    load File.join(ARM_ROOT, 'vendor', 'ext', 'jdbc_tasks_postgre_fix.rb')
  end

  desc "do db:migrate task, it's for Migrator.java to do migration easier"
  task :default => ['db:migrate']

  task :test do
    # in misc.rake, defined :default => :test, so we need define an empty test task here
  end
else
  require 'arm/tasks/arm'
end
